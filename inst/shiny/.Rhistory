table(acl$Genre,acl$Grammy)
prop.table(table(acl$Grammy))
table(acl$Grammy)
male <-acl[acl$Gender == 'M']
View(acl)
male <-acl[acl$Gender == M]
male <-acl[acl$Gender == M,]
male <-acl[acl$Gender == 'M',]
table(male$Grammy)
table(male$Gender,male$Genre)
table(male$Grammy,male$Genre)
tw = table(male$Grammy,male$Genre)
prop.table(tw,2)
4/11
35/81
barplot(tw, legend=T, beside=T)
table(acl$Facebook.100k)
fb = acl[acl$Facebook.100k,]
table(fb$Age)
View(fb)
View(fb)
fb <- acl[acl$Facebook.100k,]
fb <- acl[acl$Facebook.100k == 1,]
View(fb)
View(fb)
table(fb$Age)
plot(fb$Age)
barplot(fb$Age)
barplot(table(fb$Age))
two = sum(fb$Age>= 20 & fb$Age < 30)
two = fb[fb$Age>= 20 & fb$Age < 30,]
three = fb[fb$Age>= 30 & fb$Age < 40,]
four = fb[fb$Age>= 40 & fb$Age < 50,]
older = fb[fb$Age>= 50,]
View(two)
11/85
31/85
24/85
19/85
prop.table(table(two$Facebook.100k))
View(two)
View(two)
View(three)
two = acl[acl$Age>= 20 & acl$Age < 30,]
three = acl[acl$Age>= 30 & acl$Age < 40,]
four = acl[acl$Age>= 40 & acl$Age < 50,]
older = acl[acl$Age>= 50,]
prop.table(table(two$Facebook.100k))
prop.table(table(three$Facebook.100k))
prop.table(table(four$Facebook.100k))
prop.table(table(older$Facebook.100k))
View(acl)
p2 <- read.csv("C:/Users/dyxmv/Desktop/p2.CSV")
View(p2)
33/128
50/128
6/40
10/38
10/128
24/26
24/128
2/23
0.15/0.35
50*0.12+0.35*80
34/130
install.packages("swirl")
library("swirl")
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(pl)
ncol(plants)
object.size(plants)
names(plants)
head()
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
plants$Active_Growth_Period
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(filps)
sum(flips)
?rbinom
rbinom(1, size = 100, pron = 0.7)
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, 1, 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 1)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
cm
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d1 <- as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
d1 <- weekdays()
d1 <- weekdays(Sys.Date())
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
?unclass
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, )
plot(cars, sub = "My plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
?pars
?par
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
boxplot(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
swirl()
swirl()
sum <- 0
for (i in 1:25) {
sum <- sum + i*i
print(sum)
}
print(sum)
names(cars)
mean(cars[,2])
which(cars$dist == 85)
rm(ls())
rm(ls
)
rm(ls())
rm(list = ls())
ls
system("ls -F")
system("ls -F")
system("ls")
system("ls")
system("ls -F")
system("ls -F")
a <- system("ls ", intern = TRUE)
a <- system("ls ", intern = TRUE)
a <- system("ls "
)
a <- system("ls -F")
a <- system("ls", intern = TRUE)
devtools::install_github('andrewsali/shinycssloaders')
install.packages("digest")
devtools::install_github('andrewsali/shinycssloaders')
devtools::install_github('andrewsali/shinycssloaders')
install.packages("Rcpp")
devtools::install_github('andrewsali/shinycssloaders')
library(seqExplorer)
seqExplorer()
seqExplorer()
remove.packages('seqExplorer')
remove.packages('seqExplore')
devtools::install_github('dyxmvp/seqExplorer')
library(seqExplorer)
seqExplorer()
library(seqExplorer)
seqExplorer()
library(seqExplorer)
seqExplorer()
library(seqExplorer)
seqExplorer()
seqExplorer()
rm(list=ls())
seqExplorer()
remove.packages('seqExplore')
remove.packages('seqExplorer')
devtools::install_github('dyxmvp/seqExplorer')
devtools::install_github('dyxmvp/seqExplorer')
devtools::install_github('dyxmvp/seqExplorer')
install.packages('rlang')
devtools::install_github('dyxmvp/seqExplorer')
library(seqExplorer)
seqExplorer()
example = matrix(sample(c(0,0,0,100),size=70,replace=T),ncol=7)
rowSums(example!=0)
View(example)
rowMeans(example!=0)
1/7
?rowMeans
subset(example, rownames(example) %in% c(1,3, 5))
subset(example, rownames(example) %in% c("1","3"))
rownames(example)
row.names(example)
row.names(example)
row.names(example) <- range(1,10)
row.names(example) <- range(1,11)
range(1,10)
range(1:10)
seq(1:10)
row.names(example) <- seq(1:10)
subset(example, rownames(example) %in% c(1,3, 5))
subset(example, rownames(example) %in% c(1,3, 5)) %>% rowMeans()
subset(example, rownames(example) %in% c(1,3, 5)) %>% rowMeans
s <- subset(example, rownames(example) %in% c(1,3, 5))
rowMeans(s)
a<-rowMeans(s)
a
class(a)
dim(a)
length(a)
a[1]
a<-.rowMeans(s)
subset(example, rownames(example) %in% c(1,3, 11))
?par
?mfrow
par(mfrow=c(3))
par(mfrow=c(1))
par(mfrow=c(1,1))
e1 = matrix(sample(c(0,0,0,100),size=70,replace=T),ncol=7)
e2 = matrix(sample(c(0,0,0,100),size=70,replace=T),ncol=7)
View(e1)
View(e2)
e <- c(e1,e2)
genes_list <- lapply(e, gene_frac_df)
gene_frac_df <- function(){
#Input combined df. Returns list of gene fractions.
df_look <- subset(df, rownames(df) %in% genes_look)
gene_frac_list <- rowMeans(df_look)
return (gene_frac_list)
}
genes_list <- lapply(e, gene_frac_df)
gene_frac_df <- function(e){
#Input combined df. Returns list of gene fractions.
df_look <- subset(df, rownames(df) %in% genes_look)
gene_frac_list <- rowMeans(df_look)
return (gene_frac_list)
}
genes_list <- lapply(e, gene_frac_df)
genes_look <- c(1,3,6)
e1 = matrix(sample(c(0,0,0,100),size=70,replace=T),ncol=7)
e2 = matrix(sample(c(0,0,0,100),size=70,replace=T),ncol=7)
row.names(e1) <- seq(1:10)
row.names(e2) <- seq(1:10)
e <- c(e1,e2)
genes_look <- c(1,3,6)
gene_frac_df <- function(e){
#Input combined df. Returns list of gene fractions.
df_look <- subset(df, rownames(df) %in% genes_look)
gene_frac_list <- rowMeans(df_look)
return (gene_frac_list)
}
genes_list <- lapply(e, gene_frac_df)
gene_frac_df <- function(e){
#Input combined df. Returns list of gene fractions.
df <- e
df_look <- subset(df, rownames(df) %in% genes_look)
gene_frac_list <- rowMeans(df_look)
return (gene_frac_list)
}
genes_list <- lapply(e, gene_frac_df)
gene_frac_df(e1)
#Input combined df. Returns list of gene fractions.
df <- e
gene_frac_df <- function(e){
#Input combined df. Returns list of gene fractions.
df <- e
df_look <- subset(df, rownames(df) %in% genes_look)
gene_frac_list <- rowMeans(df_look!=0)
return (gene_frac_list)
}
gene_frac_df(e1)
genes_list <- lapply(e, gene_frac_df)
e <- list(e1,e2)
genes_look <- c(1,3,6)
gene_frac_df <- function(e){
#Input combined df. Returns list of gene fractions.
df <- e
df_look <- subset(df, rownames(df) %in% genes_look)
gene_frac_list <- rowMeans(df_look!=0)
return (gene_frac_list)
}
gene_frac_df(e1)
genes_list <- lapply(e, gene_frac_df)
genes_list
genes_list[1]
?plot_grid
??plot_grid
data.frame(gene_list = c("e1", "e2"), fraction = gene_frac_list)
data.frame(gene_list = c("e1", "e2"), fraction = genes_list)
data.frame(gene_list = c("e0", "e1", "e2"), fraction = genes_list)
df <- data.frame(gene_list = c("e0", "e1", "e2"), fraction = genes_list)
View(df)
df <- data.frame(gene_list = c("e0", "e1", "e2"), fraction = genes_list[1])
View(df)
df <- data.frame(gene_list = c("e0", "e1", "e2"), gene_frac = genes_list[1])
View(df)
?data.frame
df <- data.frame(gene_list = c("e0", "e1", "e2"), gene_frac = c(genes_list[1]))
View(df)
genes_list[1]
genes_list[1][1]
genes_list[[1]]
genes_list[[1]][1]
unlist(genes_list[1])
b <- unlist(genes_list[1])
b <- unname(genes_list[1])
View(b)
b <- unname(genes_list[1])[1]
b
b <- as.numeric(genes_list[1])
colnames(df) <- c("gene_list", "gene_frac")
View(df)
names <- c("1", "2", "3")
names(which("1"))
which(names == "1")
names <- c("5", "8", "0")
which(names == "5")
which(names == "1")
which(names == "8")
which(names == "0")
View(e1)
rowMeans(e1!=0)
View(e1)
df <- data.frame(rownames(e1), lapply(rowMeans(e1!=0), round, 2))
View(df)
rownames(e1)
df <- data.frame(lapply(rowMeans(e1!=0), round, 2))
View(df)
View(b)
View(e1)
?data.frame
df <- t(df)
View(df)
colnames(df) <- c("e1")
View(df)
rownames(df) <- rownames(e1)
View(df)
row.names(e2) <- seq(5:14)
View(e2)
row.names(e2) <- seq(5:14)
View(e2)
seq(5:14)
row.names(e2) <- seq(1:10) + 5
View(e2)
df2 <- data.frame(lapply(rowMeans(e2!=0), round, 2))
df2 <- t(df2)
colnames(df2) <- c("e2")
rownames(df2) <- rownames(e2)
View(df2)
transform(merge(df,df2,by=0,all=TRUE), row.names=Row.names, Row.names=NULL)
transform(merge(df,df2,by=0,all=TRUE, sort = TRUE), row.names=Row.names, Row.names=NULL)
transform(merge(df,df2,by=0,all=TRUE, sort = FALSE), row.names=Row.names, Row.names=NULL)
transform(merge(df,df2,by=0,all=TRUE), row.names=Row.names, Row.names=NULL)
df_merge <- transform(merge(df,df2,by=0,all=TRUE), row.names=Row.names, Row.names=NULL)
View(df_merge)
df_merge[is.na(df_merge)] <- 0
View(df_merge)
"a" + "_avg"
df_merge <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
View(df_merge)
View(df_merge)
df_merge <- data.frame(sample_name=character(), stringsAsFactors=FALSE)
View(df_merge)
df_merge <- transform(merge(df_merge,df,by=0,all=TRUE), row.names=Row.names, Row.names=NULL)
View(df_merge)
df_merge <- transform(merge(df_merge,df2,by=0,all=TRUE), row.names=Row.names, Row.names=NULL)
View(df_merge)
View(df_merge)
dd <- df_merge[-1, ]
View(dd)
dd <- df_merge[, -1]
View(dd)
View(df)
View(dd)
df_merge <- df_merge[, -1]
View(df_merge)
df_merge[is.na(df_merge)] <- 0
View(df_merge)
d <- df
names <- rownames(d)
rownames(d) <- NULL
data <- cbind(names,d)
View(data)
View(d)
d <- df
names <- rownames(d)
data <- cbind(names,d)
View(data)
data <- cbind(NAME,d)
NAME <- rownames(d)
data <- cbind(NAME,d)
View(data)
row.names(data) <- data[,1]
View(data)
NAME <- seq(1:10) + 5
data <- cbind(NAME,d)
rownames(data) <- data[,1]
View(data)
View(data)
c("1", "2", "11") in rownames(e1)
c("1", "2", "11") %in% rownames(e1)
which(c("1", "2", "11") %in% rownames(e1) == FALSE)
which(c("1", "21", "11") %in% rownames(e1) == FALSE)
gene_frac_list <- rowMeans(df_look!=0)
#Input combined df. Returns list of gene fractions.
df <- e1
df_look <- subset(df, rownames(df) %in% genes_look)
gene_frac_list <- rowMeans(df_look!=0)
gene_frac_list
insert(gene_frac_list, ats=2, value=1)
gene_frac_list[1]
gene_frac_list[2] <- 0
gene_frac_list
gene_frac_list <- rowMeans(df_look!=0)
gene_frac_list
which(c("1", "21", "11") %in% rownames(e1) == TRUE)
g <- list(rep(0, 50))
View(g)
g <- rep(0, 3)
replace(g, which(c("1", "3", "6", "11") %in% rownames(e1) == TRUE), gene_frac_list)
g <- rep(0, 4)
replace(g, which(c("1", "3", "6", "11") %in% rownames(e1) == TRUE), gene_frac_list)
replace(g, which(c("1", "11", "3", "6") %in% rownames(e1) == TRUE), gene_frac_list)
length(c("1", "21", "11"))
rowMeans(df_look!=0)
View(df)
View(df_merge)
View(df)
View(df_merge)
df_merge <- data.frame(empty_name=character(), stringsAsFactors=FALSE)
2
df_merge <- transform(merge(df_merge,df2,by=0,all=TRUE), row.names=Row.names, Row.names=NULL)
View(df_merge)
df_merge <- df_merge[, -1]
df_merge
df_merge <- as.dataframe(df_merge[, -1])
df_merge <- as.data.frame(df_merge[, -1])
df_merge <- data.frame(empty_name=character(), stringsAsFactors=FALSE)
df_merge <- transform(merge(df_merge,df2,by=0,all=TRUE), row.names=Row.names, Row.names=NULL)
View(df_merge)
df_merge <- as.data.frame(df_merge[, -1])
View(df_merge)
df_merge <- data.frame(empty_name=character(), stringsAsFactors=FALSE)
df_merge <- transform(merge(df_merge,df2,by=0,all=TRUE), row.names=Row.names, Row.names=NULL)
df_merge <- df_merge[, -1]
class(df_merge)
View(df)
View(df_look)
gsub("^.*?_","_","ATGAS_1121")
greb("^.*?_","_","ATGAS_1121")
grep("^.*?_","_","ATGAS_1121")
grep("^.*?_","","ATGAS_1121")
gsub(".*?_","_","ATGAS_1121")
gsub("-.*?_","_","ATGAS_1121")
grep("_1121", "ATGAS_1121", invert=TRUE, value = TRUE)
sub("_1121$", "", "ATGAS_1121")
setwd("E:/Google drive (yanxiang.deng)/Yale/Bioinformatics/Code/seqExplorer/inst/shiny")
shiny::runApp()
